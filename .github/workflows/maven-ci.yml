name: " ðŸš§  - Java CI with Maven"

on:
  push:
    branches-ignore:
      - 'dependabot/**'

env:
  AZ_RESOURCE_GROUP: "tgrall"
  AZ_CLUSTER_NAME: "sidel-kube"
  NAMESPACE_DEV: "demo-dev"
  NAMESPACE_STAGING: "demo-staging"
  NAMESPACE_PROD: "production"

jobs:
  build:
    name: Build with Maven
    runs-on: self-hosted

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: github
          server-username: MAVEN_USERNAME
          server-password: MAVEN_GHPR_PASSWORD

      # Utilize caching of the resolved plugins and dependencies from previous Maven builds to provide
      # faster builds when dependencies have not changed.
      - name: Cache Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          # Hash on the POM file as that would need to change to modify the dependencies or plugins in use
          key: mvn-${{ matrix.java }}-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            mvn-${{ matrix.java }}-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
            mvn-${{ matrix.java }}-${{ runner.os }}
            mvn-${{ matrix.java }}
            mvn-          
          
      - name: Build with Maven
        env:
          MAVEN_USERNAME: octodemobot
          MAVEN_GHPR_PASSWORD: ${{secrets.MY_GITHUB_PERSONAL_TOKEN}}
        run: |
          mvn -B package --file pom.xml

      - name: Save artifacts
        uses: actions/upload-artifact@v2
        with:
          name: calculator-service.jar
          path: target/calculator-service-*.jar          

  build_publish_container:
    name: Build Container

    # Do not run this on dependabot triggered activities as it cannot read the Actions Secrets.
    if: ${{ !(contains(github.actor, 'dependabot[bot]')) }}

    runs-on: ubuntu-latest

    needs:
      - build

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get Jar file artifact
        uses: actions/download-artifact@v2
        with:
          name: calculator-service.jar
          path: target
    
      - name: GitHub Container Registry Login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: octodemobo
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Container
        id: container_publish
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: |
            VERSION=1.0.0
            REPOSITORY_NAME=${{ github.repository }}
            revision=${{ github.sha }}
          push: true
          tags: ghcr.io/tgrall-octodemo/operation-service:1.0


  deploy_to_kubernetes:
    needs: build_publish_container
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2            

      # login to azure
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}    

      - name: Get AKS Credentials
        id: getContext
        run: |
          az aks get-credentials --resource-group ${{ env.AZ_RESOURCE_GROUP }} --name ${{ env.AZ_CLUSTER_NAME }} --file $GITHUB_WORKSPACE/kubeconfig
          echo "KUBECONFIG=$GITHUB_WORKSPACE/kubeconfig" >> $GITHUB_ENV

      - name: Get AKS Credentials
        uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with:
          length: 8
      - run: echo "SHA8=${{ steps.short-sha.outputs.sha }}" >> $GITHUB_ENV             

      - name: Deploy to Dev
        id: applyDeploymentDev
        if: ${{ github.ref != 'refs/heads/main' }}
        run: |
            sed -i 's/COMMIT_SHA/${{env.SHA8}}/g' kubernetes/deployment.yml  
            kubectl apply -f ./kubernetes/deployment.yml --namespace=${{ env.NAMESPACE_DEV }}                          
